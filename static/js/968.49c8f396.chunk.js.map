{"version":3,"file":"static/js/968.49c8f396.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundry/ErrorBoundry.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hooks.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"error\" />\r\n\t\t//<img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\" />  звернення до статичного елементу\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage","import {useState, useEffect} from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\tconst {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar();\r\n\t\tconst timerId = setInterval(updateChar, 60000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timerId)\r\n\t\t}\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = () => {\r\n\t\tclearError();\r\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\r\n\t\tgetCharacter(id)\r\n\t\t\t.then(onCharLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar\">\r\n\t\t\t{setContent(process, View, char)}\r\n\t\t\t<div className=\"randomchar__static\">\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tRandom character for today!<br/>\r\n\t\t\t\t\tDo you want to get to know him better?\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tOr choose another one\r\n\t\t\t\t</p>\r\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\r\n\t\t\t\t\t<div className=\"inner\">try it</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst View = ({data}) => {\r\n\tconst {name, description, thumbnail, homepage, wiki} = data;\r\n\tlet imgStyle = {'objectFit' : 'cover'};\r\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\timgStyle = {'objectFit' : 'contain'};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar__block\">\r\n\t\t\t<img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n\t\t\t<div className=\"randomchar__info\">\r\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\r\n\t\t\t\t<p className=\"randomchar__descr\">\r\n\t\t\t\t\t{description}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"randomchar__btns\">\r\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\r\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\r\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RandomChar;","import {useState, useEffect, useRef, useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'loading':\r\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\r\n\t\tcase 'confirmed':\r\n\t\t\treturn <Component/>;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nconst CharList = (props) => {\r\n\r\n\tconst [charList, setCharList] = useState([]);\r\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\r\n\tconst [offset, setOffset] = useState(210);\r\n\tconst [charEnded, setCharEnded] = useState(false);\r\n\t\r\n\tconst {getAllCharacters, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\t\tgetAllCharacters(offset)\r\n\t\t\t.then(onCharListLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\r\n\tconst onCharListLoaded = async (newCharList) => {\r\n\t\tlet ended = false;\r\n\t\tif (newCharList.length < 9) {\r\n\t\t\tended = true;\r\n\t\t}\r\n\r\n\t\tsetCharList([...charList, ...newCharList]);\r\n\t\tsetNewItemLoading(false);\r\n\t\tsetOffset(offset + 9);\r\n\t\tsetCharEnded(ended);\r\n\t}\r\n\r\n\tconst itemRefs = useRef([]);\r\n\r\n\tconst focusOnItem = (id) => {\r\n\t\t// Я реализовал вариант чуть сложнее, и с классом и с фокусом\r\n\t\t// Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\r\n\t\t// На самом деле, решение с css-классом можно сделать, вынеся персонажа\r\n\t\t// в отдельный компонент. Но кода будет больше, появится новое состояние\r\n\t\t// и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\r\n\r\n\t\t// По возможности, не злоупотребляйте рефами, только в крайних случаях\r\n\t\titemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n\t\titemRefs.current[id].classList.add('char__item_selected');\r\n\t\titemRefs.current[id].focus();\r\n\t}\r\n\r\n\t// Этот метод создан для оптимизации, \r\n\t// чтобы не помещать такую конструкцию в метод render\r\n\tconst renderItems = arr => {\r\n\t\tconst items =  arr.map((item, i) => {\r\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\r\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\t\t\timgStyle = {'objectFit' : 'unset'};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\r\n\t\t\t\t\t<li \r\n\t\t\t\t\t\tclassName=\"char__item\"\r\n\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\tref={el => itemRefs.current[i] = el}\r\n\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\r\n\t\t\t\t\t\t\tfocusOnItem(i);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\tif (e.key === ' ' || e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\tprops.onCharSelected(item.id);\r\n\t\t\t\t\t\t\t\tfocusOnItem(i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n\t\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t)\r\n\t\t});\r\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\r\n\t\treturn (\r\n\t\t\t<ul className=\"char__grid\">\r\n\t\t\t\t<TransitionGroup component={null}>\r\n\t\t\t\t\t{items}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n\t\r\n\tconst elements = useMemo(() => {\r\n\t\treturn setContent(process, () => renderItems(charList), newItemLoading);\r\n\t\t// eslint-disable-next-line\r\n\t}, [process])\r\n\r\n\treturn (\r\n\t\t<div className=\"char__list\">\r\n\t\t\t{elements}\r\n\t\t\t<button \r\n\t\t\t\tdisabled={newItemLoading} \r\n\t\t\t\tstyle={{'display' : charEnded ? 'none' : 'block'}}\r\n\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\tonClick={() => onRequest(offset)}>\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCharList.propTypes = {\r\n\tonCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.charId])\r\n\r\n\tconst updateChar = () => {\r\n\t\tconst {charId} = props;\r\n\t\tif (!charId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearError();\r\n\t\tgetCharacter(charId)\r\n\t\t\t.then(onCharLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'))\r\n\t}\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"char__info\">\r\n\t\t\t{setContent(process, View, char)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst View = ({data}) => {\r\n\tconst {name, description, thumbnail, homepage, wiki, comics} = data;\r\n\r\n\tlet imgStyle = {'objectFit' : 'cover'};\r\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\timgStyle = {'objectFit' : 'contain'};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"char__basics\">\r\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\r\n\t\t\t\t\t<div className=\"char__btns\">\r\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__comics\">Comics:</div>\r\n\t\t\t<ul className=\"char__comics-list\">\r\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\r\n\t\t\t\t{\r\n\t\t\t\t\tcomics.map((item, i) => {\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tif (i > 9) return;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\r\n\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nCharInfo.propTypes = {\r\n\tcharId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst {getCharacterByName, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name)\r\n\t\t\t.then(onCharLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\t\r\n\tconst errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n\tconst results = !char ? null : char.length > 0 ?\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n\t\t\t\t\t\t<Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div> : \r\n\t\t\t\t\t<div className=\"char__search-error\">\r\n\t\t\t\t\t\tThe character was not found. Check the name and try again\r\n\t\t\t\t\t</div>;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues = {{\r\n\t\t\t\t\tcharName: ''\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema = {Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required')\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit = { ({charName}) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\tid=\"charName\" \r\n\t\t\t\t\t\t\tname='charName' \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"/>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\ttype='submit' \r\n\t\t\t\t\t\t\tclassName=\"button button__main\"\r\n\t\t\t\t\t\t\tdisabled={process === 'loading'}>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharSearchForm;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState } from \"react\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\nimport ErrorBoundary from \"../errorBoundry/ErrorBoundry\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta \r\n\t\t\t\t\tname=\"description\" \r\n\t\t\t\t\tcontent=\"Marvel information portal\" />\r\n\t\t\t\t<title>Marvel information portal</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo charId={selectedChar}/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MainPage;","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst {request, clearError, process, setProcess} = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=a95a10fdf68ee7e4c2f8595cae5d804c';\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\t// Вариант модификации готового метода для поиска по имени.\r\n\t// Вызывать его можно вот так: getAllCharacters(null, name)\r\n\r\n\t// const getAllCharacters = async (offset = _baseOffset, name = '') => {\r\n\t//\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\r\n\t//\treturn res.data.results.map(_transformCharacter);\r\n\t// }\r\n\r\n\t// Или можно создать отдельный метод для поиска по имени\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn { \r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess, \r\n\t\tgetAllCharacters, \r\n\t\tgetCharacterByName, \r\n\t\tgetCharacter, \r\n\t\tgetAllComics, \r\n\t\tgetComic,}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\t\t\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry{\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\treturn data;\r\n\t\t} catch(e){\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t},[]);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess}\r\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<p className=\"char__select\">Please select a character to see information</p>\n\t\t\t<div className=\"skeleton\">\n\t\t\t\t<div className=\"pulse skeleton__header\">\n\t\t\t\t\t<div className=\"pulse skeleton__circle\"></div>\n\t\t\t\t\t<div className=\"pulse skeleton__mini\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Skeleton/>;\r\n\t\tcase 'loading':\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'confirmed':\r\n\t\t\treturn <Component data={data}/>;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContent;"],"names":["_jsx","style","display","width","height","objectFit","margin","src","img","alt","View","_ref","data","name","description","thumbnail","homepage","wiki","imgStyle","_jsxs","className","children","href","_useState","useState","_useState2","_slicedToArray","char","setChar","_useMarvelService","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","props","charList","setCharList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newCharList","ended","wrap","_context","prev","next","length","concat","_toConsumableArray","stop","_x","apply","arguments","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","Component","Spinner","ErrorMessage","Error","arr","items","map","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","comics","_Fragment","charId","getCharacterByName","errorMessage","results","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","value","errorInfo","console","log","this","setState","selectedChar","Helmet","content","RandomChar","CharList","CharInfo","CharSearchForm","decoration","_useHttp","request","useCallback","url","method","body","headers","response","_args","undefined","fetch","sent","ok","status","json","abrupt","t0","useHttp","_apiBase","_apiKey","res","_transformCharacter","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","slice","path","extension","urls","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton"],"sourceRoot":""}